# Enable Powerlevel10k instant prompt. Should stay close to the top of ~/.zshrc.
# Initialization code that may require console input (password prompts, [y/n]
# confirmations, etc.) must go above this block; everything else may go below.
##: init direnv (see: https://github.com/romkatv/powerlevel10k/blob/master/README.md#how-do-i-initialize-direnv-when-using-instant-prompt)
. $HOME/.asdf/asdf.sh
(( ${+commands[direnv]} )) && emulate zsh -c "$(asdf exec direnv export zsh)"
if [[ -r "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh" ]]; then
  source "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh"
fi
(( ${+commands[direnv]} )) && emulate zsh -c "$(asdf exec direnv hook zsh)"

# Start GNUPG Agent
# gpg-connect-agent updatestartuptty /bye >/dev/null

# Start ssh-agent with keychain
# keychain id_ed25519 --agents ssh --quiet
eval $(keychain --eval --quiet id_ed25519 ~/.ssh/id_ed25519)

# Load Aliases
source $HOME/.aliases

# Set name of the theme to load --- if set to "random", it will
# load a random theme each time oh-my-zsh is loaded, in which case,
# to know which specific one was loaded, run: echo $RANDOM_THEME
# See https://github.com/ohmyzsh/ohmyzsh/wiki/Themes
# POWERLEVEL10K_MODE='nerdfont-complete'
# Note: don't set ZSH_THEME if using starship
ZSH_THEME="powerlevel10k/powerlevel10k"
ZLE_RPROMPT_INDENT=0

# Set list of themes to pick from when loading at random
# Setting this variable when ZSH_THEME=random will cause zsh to load
# a theme from this variable instead of looking in $ZSH/themes/
# If set to an empty array, this variable will have no effect.
# ZSH_THEME_RANDOM_CANDIDATES=( "robbyrussell" "agnoster" )

# Uncomment the following line to use case-sensitive completion.
# CASE_SENSITIVE="true"

# Uncomment the following line to use hyphen-insensitive completion.
# Case-sensitive completion must be off. _ and - will be interchangeable.
# HYPHEN_INSENSITIVE="true"

# Uncomment the following line to disable bi-weekly auto-update checks.
# DISABLE_AUTO_UPDATE="true"

# Uncomment the following line to automatically update without prompting.
# DISABLE_UPDATE_PROMPT="true"

# Uncomment the following line to change how often to auto-update (in days).
# export UPDATE_ZSH_DAYS=13

# Uncomment the following line if pasting URLs and other text is messed up.
# DISABLE_MAGIC_FUNCTIONS=true

# Uncomment the following line to disable colors in ls.
# DISABLE_LS_COLORS="true"

# Uncomment the following line to disable auto-setting terminal title.
# DISABLE_AUTO_TITLE="true"

# Uncomment the following line to enable command auto-correction.
# ENABLE_CORRECTION="true"

# Uncomment the following line to display red dots whilst waiting for completion.
# COMPLETION_WAITING_DOTS="true"

# Uncomment the following line if you want to disable marking untracked files
# under VCS as dirty. This makes repository status check for large repositories
# much, much faster.
DISABLE_UNTRACKED_FILES_DIRTY="true"

# Uncomment the following line if you want to change the command execution time
# stamp shown in the history command output.
# You can set one of the optional three formats:
# "mm/dd/yyyy"|"dd.mm.yyyy"|"yyyy-mm-dd"
# or set a custom format using the strftime function format specifications,
# see 'man strftime' for details.
# HIST_STAMPS="mm/dd/yyyy"

# Would you like to use another custom folder than $ZSH/custom?
# ZSH_CUSTOM=/path/to/new-custom-folder

# Autostart tmux with zsh
# https://github.com/ohmyzsh/ohmyzsh/tree/master/plugins/tmux
# ZSH_TMUX_AUTOSTART=true

# Which plugins would you like to load?
# Standard plugins can be found in $ZSH/plugins/
# Custom plugins may be added to $ZSH_CUSTOM/plugins/
# Example format: plugins=(rails git textmate ruby lighthouse)
# Add wisely, as too many plugins slow down shell startup.
plugins=(
 #a5r                           # adstakr autocompletions (custom)
  adb                           # adb completions
  archlinux                     # archlinux completions / helpers
  asdf                          # asdf completions
  aws                           # aws completions
  colored-man-pages             # colorize man pages
  common-aliases                # common-aliases for ls, file-handling, find, etc.
  copybuffer                    # binds ctrl-o to copy currently typed cmd
  docker                        # docker aliases
  docker-compose                # docker-compose aliases
  dnote                         # auto-completion for Dnote, a simple command line notebook
  fancy-ctrl-z                  # ctrl-z opens/closes vim
  fzf                           # fzf autocompletions & bindings
  gh                            # github cli
  git                           # git alias/completions
  git-extras                    # awesome git scripts
  gitfast                       # faster git
  gpg-agent                     # enables gpg agent if not running
  helm                          # helm autocompletions
  heroku                        # heroku autocompletions
  httpie                        # httpie autocompletions
  kubectl                       # kubectl completions/aliases
  minikube                      # minikube completions
  npm                           # npm aliases
  pnpm                          # pnpm aliases (custom: https://github.com/ntnyq/omz-plugin-pnpm)
  poetry                        # python poetry autocompletions
  projen                        # projen autocompletions (custom: mkdir -p $ZSH_CUSTOM/plugins/projen && projen completion > $ZSH_CUSTOM/plugins/projen/_projen)
  python                        # python aliases
  ripgrep                       # ripgrep autocompletions
  rsync                         # rsync aliases
  rtx                           # rtx (asdf clone) completions
  systemd                       # systemd aliases
  systemadmin                   # aliases/functions to make system admin's life easier
  taskwarrior                   # taskwarrior autocompletions
  timewarrior                   # timewarrior completions/aliases (custom: https://github.com/svenXY/timewarrior)
  tmux                          # tmux completions/aliases
  urltools                      # urlencode and urldecode strings
  yarn                          # yarn completions/aliases
  zoxide                        # initializes zoxide (smart cd with 'z')
  zsh-autosuggestions           # zsh auto suggestions
  zsh-interactive-cd            # interactive tab completion for cd
  zsh-navigation-tools          # set of zsh nav tools (n-history, n-cd, n-kill, n-list)
  # zsh-syntax-highlighting       # zsh syntax highlighting !! must be last
  fast-syntax-highlighting      # https://github.com/zdharma-continuum/fast-syntax-highlighting
)

source $ZSH/oh-my-zsh.sh

# Key bind for zsh-autosuggestions
bindkey '^ ' autosuggest-accept

# Enable option stacking for docker
# Example: docker run -it <TAB> doesn't work, because you're stacking the -i and -t options
# See: https://github.com/ohmyzsh/ohmyzsh/tree/master/plugins/docker
zstyle ':completion:*:*:docker:*' option-stacking yes
zstyle ':completion:*:*:docker-*:*' option-stacking yes

# User configuration

# export MANPATH="/usr/local/man:$MANPATH"

# You may need to manually set your language environment
# export LANG=en_US.UTF-8

# Preferred editor for local and remote sessions
# if [[ -n $SSH_CONNECTION ]]; then
#   export EDITOR='vim'
# else
#   export EDITOR='mvim'
# fi

# Compilation flags
# export ARCHFLAGS="-arch x86_64"

# Set personal aliases, overriding those provided by oh-my-zsh libs,
# plugins, and themes. Aliases can be placed here, though oh-my-zsh
# users are encouraged to define aliases within the ZSH_CUSTOM folder.
# For a full list of active aliases, run `alias`.
#
# Example aliases
# alias zshconfig="mate ~/.zshrc"
# alias ohmyzsh="mate ~/.oh-my-zsh"

# To customize prompt, run `p10k configure` or edit ~/.p10k.zsh.
[[ ! -f ~/.p10k.zsh ]] || source ~/.p10k.zsh

#export NVM_DIR="$HOME/.nvm"
#[ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"  # This loads nvm
#[ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion"  # This loads nvm bash_completion

[ -f ~/.fzf.zsh ] && source ~/.fzf.zsh

# Hook direnv into your shell.
# eval "$(asdf exec direnv hook zsh)"

# Hook rtx (asdf rust clone) to shell
eval "$(/usr/bin/rtx activate zsh)"

# A shortcut for asdf managed direnv.
direnv() { rtx exec direnv@latest "$@"; }

# tabtab source for packages
# uninstall by removing these lines
[[ -f ~/.config/tabtab/zsh/__tabtab.zsh ]] && . ~/.config/tabtab/zsh/__tabtab.zsh || true

# source "${XDG_CONFIG_HOME:-$HOME/.config}/asdf-direnv/zshrc"

# Init starship. See: https://starship.rs/
eval "$(starship init zsh)"

# Init procs. See: https://github.com/dalance/procs
source <(procs --gen-completion-out bash)

# Init Atuin. See: https://github.com/ellie/atuin
eval "$(atuin init zsh)"

